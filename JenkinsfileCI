def registry = 'http://52.70.116.150:8082'
def user = "admin"
def password = "admin"
def URL = "/crx/packmgr/service.jsp"
pipeline{
    agent any

    tools{
        maven 'maven-3.9.3'
    }
    
    options {
        timestamps()
    }
//security
    parameters {
        choice choices: ['master', 'develop', 'feature', 'qa'], name: 'branchName'
        string defaultValue: 'https://github.com/sumds/aem-guides-wknd-spa.git', name: 'giturl'
    }

    stages{
        stage("Checkout from git"){
            steps{
                git branch: "${params.branchName}",credentialsId: 'sumds', url: "${params.giturl}"
            }
        }
        
        // stage("Build"){
        //     steps{
        //         echo '<--------------- Building --------------->'
        //         sh "mvn clean install"
        //         echo "----------- build completed ----------"
        //     }
        // }

        // stage('Unit Test') {
        //     steps{
        //         echo '<--------------- Unit Testing started  --------------->'
        //         //sh 'mvn surefire-report:report' -->not working
        //         echo '<------------- Unit Testing stopped  --------------->'
        //     }
        // }

        // stage("Execute sonarqube report"){
        //     steps{
        //         sh "mvn sonar:sonar"
        //     }
        // }

        // stage("AEM Publish") {
        //     steps {
        //         script {
        //                 echo '<--------------- AEM package Publish Started --------------->'
        //                 def server = Artifactory.newServer url:registry+"/artifactory" ,  credentialsId:"jfrog_access"
        //                 def properties = "buildid=${env.BUILD_ID},commitid=${GIT_COMMIT}";
        //                 //upload specifications
        //                 def uploadSpec = """{
        //                     "files": [
        //                         {
        //                         "pattern": "deployment/target/(*)",
        //                         "target": "aem-local-demo-snapshot-repo/{1}",
        //                         "flat": "false",
        //                         "props" : "${properties}",
        //                         "exclusions": [ "*.sha1", "*.md5", "*.jar", "*.xml", "*.properties"]
        //                         }
        //                     ]
        //                 }"""
        //                 def buildInfo = server.upload(uploadSpec)
        //                 buildInfo.env.collect()
        //                 server.publishBuildInfo(buildInfo)
        //                 echo '<--------------- AEM package Publish Ended --------------->'  
                
        //         }
        //     }   
        // }

        
        // stage ('Deploy to Prod'){
        //     steps {
        //         script {
        //             def server = Artifactory.newServer url:registry+"/artifactory" ,  credentialsId:"jfrog_access"
        //             def properties = "buildid=${env.BUILD_ID},commitid=${GIT_COMMIT}";
        //             echo "${properties}"
        //             def downloadSpec = """{
        //                 "files": [
        //                     {
        //                     "pattern": "aem-local-demo-snapshot-repo/*.zip",
        //                     "target": "test/",
        //                     "flat": "false"                            
        //                     }
        //                 ]
        //             }"""
        //             def buildInfo = server.download(downloadSpec)
        //             buildInfo.env.collect()
        //             server.publishBuildInfo(buildInfo)
        //         }                
        //     }
        // }   

        stage('Deploy to Prod'){ 
            steps{
                
                echo " Installing Pakage on Author"
                sh 'cd test'
                sh 'pwd'
                //sh 'curl -u $user:$password -F file=@"aem-guides-wknd-spa.react.all-1.0.0-SNAPSHOT.zip" -F name="aem-guides-wknd-spa.react.all-1.0.0-SNAPSHOT" -F force=true -F install=true http://54.152.188.106:4502$URL'
                sh 'curl --version'
            }
        } 
    }
}